{
    "docs": [
        {
            "location": "/", 
            "text": "Web site official home page\n\n\nNew name of edocker repository\n\n\n\n\nTable of content\n\n\n\n\nPresentation\n\n\nHow to install edjanger\n\n\nHow to uninstall edjanger\n\n\nHow to initialize an edjanger project\n\n\nHow to use edjanger in a docker project working directory\n\n\nCreate edjanger path project aliases\n\n\nCheck missing parameters in edjanger.properties\n\n\nCall help commands\n\n\nCreate an docker-compose.yaml file from edjanger structure\n\n\nUse templates files to configure edjanger.properties\n\n\nConfigure automatic container restart at boot\n\n\nWork in progress\n\n\nTests\n\n\nLicense\n\n\n\n\nPresentation\n\n\n(\ngo up to table of content\n)\n\n\nScripts for shortest and easyest docker commands in a docker working folder (Dockerfile)\n\n\nTired about repeating docker commands with long parameters ?\n\n\nTry edjanger ! Example :\n\n\nConfigure edjanger.properties with docker parameters once and run edjanger alias command.\n\n\n\n\nExample 1: docker build\n\n\n\n\nedjangerbuild\n\n\n\n\ninstead of:\n\n\ndocker build -t \ndevops/jenkins\n       build\n\n\n\n\n\n\nExample 2: docker run\n\n\n\n\nedjangerrun\n\n\n\n\ninstead of:\n\n\ndocker run -dt --name jenkins_1    -p 8080:8080 -p 50000:50000  -v /root/workspace/docker/devops/continuous_integration/jenkins/volumes/jenkins_home:/var/jenkins_home  --link dind_1:docker devops/jenkins\n\n\n\n\n\n\nExample 3: docker stop\n\n\n\n\nedjangerstop\n\n\n\n\ninstead of:\n\n\ndocker stop $(docker ps -aq | grep \ndevops/jenkins\n)\n\n\n\n\nHow to install edjanger\n\n\n(\ngo up to table of content\n)\n\n\nPrerequisities\n\n\n\n\ninstall bc command\n\n\ninstall gettext (for envsubst)\n    osx:\n      brew install gettext\n      brew link --force gettext\n      echo \"PATH=/usr/local/Cellar/gettext/0.19.8.1/bin/envsubst:$PATH\" \n ~/.bashrc\n      source ~/.bashrc\n\n\noptionnal: install tree command (from binaries or from sources http://mama.indstate.edu/users/ice/tree/)\n\n\n\n\nOS compliant\n\n\n\n\nos x El Capitan 10.11.6\n\n\nubuntu \n 14.04\n\n\n\n\nInstallation\n\n\ngit clone https://github.com/pamtrak06/edjanger.git /usr/local/bin\ncd edjanger; chmod 755 scripts/*.sh; chmod 755 edjangerinstall.sh\n\n\n\n\nRun edjanger installation\n\n\n./edjangerinstall.sh --alias\n\n\n\n\nThis will install edjanger in /usr/local/bin/edjanger\nIf installation fail to install in this directory, try to install it in another\n\n\nedjanger_INSTALL_PATH=\nyour path\n\ngit clone https://github.com/pamtrak06/edjanger.git $edjanger_INSTALL_PATH\ncd edjanger; chmod 755 scripts/*.sh; chmod 755 edjangerinstall.sh\n\n\n\n\nExecute the generated alias file:\n\n\n. /usr/local/bin/edjanger/edjanger.alias\n\n\n\n\nAll is done !!! Run this command to see your edjanger aliases\n\n\nalias|grep edjanger\n\n\n\n\nConfiguration\n\n\nbash\n\n\nBash as login shell will load /etc/profile, ~/.bash_profile, ~/.bash_login, ~/.profile in the order\nBash as non-login interactive shell will load ~/.bashrc\nBash as non-login non-interactive shell will load the configuration specified in environment variable $BASH_ENV\n\n\nAdd lines at the bottom of one of the following files:  \n\n\necho \nsource {edjanger path}/edjanger.alias\n \n /etc/profile\n\n\n\n\nor\n\n\necho \nsource {edjanger path}/edjanger.alias\n \n ~/.bash_profile\n\n\n\n\nor\n\n\necho \nsource {edjanger path}/edjanger.alias\n \n ~/.bash_login\n\n\n\n\nor\n\n\necho \nsource {edjanger path}/edjanger.alias\n \n ~/.profile\n\n\n\n\nor\n\n\necho \nsource {edjanger path}/edjanger.alias\n \n ~/.bashrc\n\n\n\n\nor\n\n\necho \nsource {edjanger path}/edjanger.alias\n \n ~/.bash_aliases\n\n\n\n\nzsh\n\n\nAdd lines at the bottom of the file ~/.zshrc\n\n\necho \nsource {edjanger path}/edjanger.alias\n \n ~/.zshrc\n\n\n\n\nksh\n\n\nAdd lines at the bottom of the file ~/.profile  \n\n\necho \nsource {edjanger path}/edjanger.alias\n \n ~/.profile\n\n\n\n\nbourne\n\n\nAdd lines at the bottom of the file ~/.profile  \n\n\necho \nsource {edjanger path}/edjanger.alias\n \n ~/.profile\n\n\n\n\ncsh or tcsh\n\n\nAdd lines at the bottom of the file ~/.login\n\n\necho \nsource {edjanger path}/edjanger.alias\n \n ~/.login\n\n\n\n\nHow to uninstall edjanger\n\n\n(\ngo up to table of content\n)\n\n\nRemove edjanger aliases by executing:\n\n\nsource edjanger.unalias\n\n\n\n\nRemove references to source command in ~/.bash_aliases\n\n\nvi ~/.bash_aliases\n\n\n\n\nRemove edjanger files\n\n\nrm -rf {edjanger path}/\n\n\n\n\nHow to initialize an edjanger project\n\n\n(\ngo up to table of content\n)\n\n\nCreate an uninitialized edjanger.properties file in your working docker folder:\n\n\nedjangerinit\n\n\n\n\nEquivalent to\n\n\n Initialize edjanger configuration file: edjanger.properties ...\ncp [edjanger path]/templates/edjanger_template.properties [your docker working project]/edjanger.properties\n\n Initialize edjanger build folder for Dockerfile: /build ...\nmkdir [your docker working project]/build\n\n Initialize Dockerfile: build/Dockerfile ...\ntouch [your docker working project]/build/Dockerfile\n\n\n\n\nConfigure your \nedjanger.properties\n with correct parameters.\nBy example, you could create a Dockerfile with this path:\n\n\nvi [your docker working project]/build/Dockerfile\n\n\n\n\nExample of a minimal edjanger configuration:\n\n\nmkdir -p jenkins\ncd jenkins; edjangerinit\nvi edjanger.properties\n\n\n\n\n#  ----------------------------------------------------\n#  The MIT License (MIT)\n#\n#  Copyright (c) 2016 copyright pamtrak06@gmail.com\n#  ----------------------------------------------------\n#  CONFIGURATION    : edjanger_template.properties\n#  DESCRIPTION      : project configuration file for edjanger\n#  CREATOR          : pamtrak06@gmail.com\n#  --------------------------------\n#  VERSION          : 1.0\n#  DATE             : 2016-03-02\n#  COMMENT          : creation\n#  --------------------------------\n#  USAGE            : read by edjanger scripts\n#  ----------------------------------------------------\n#cron_build: flag to start container at boot\n#cron_build=true\n#cron_start: flag to start container at boot\ncron_start=true\n# docker_command:show docker command when edjanger is used\ndocker_command=true\n# image_name:image name\nimage_name=\ndevops/jenkins\n\n# build_path:path where is found Dockerfile\nbuild_path=build\n# build_args:build arguments\n# build_args=\n--build-arg VAR1='value1' --build-arg VAR2='value2'\n\n# build_forcerm:always remove intermediate containers\n# build_forcerm=\n--force-rm\n\n# build_rm: Remove intermediate containers after a successful build\n# build_rm=\n--rm=true\n\n# build_nocache:do not use cache when building the image\n# build_nocache=\n--no-cache\n\n# build_file:name of the Dockerfile (Default is 'PATH/Dockerfile')\n# build_file=\n--file Dockerfile\n\n# container_name:container\ncontainer_name=\njenkins\n\n# exposed_ports:exposed port\nexposed_ports=\n-p 8080:8080 -p 50000:50000\n\n# shared_volumes:shared volumes\nshared_volumes=\n-v $PWD/volumes/jenkins_home:/var/jenkins_home\n\n# volumes_from:expose volumes from another container into current container\n# volumes_from=\n--volumes-from \ncontainer name with exposed volumes\n\n# environment_variables:environnment variables\n# environment_variables=\n-e \nvariable name 1\n=\nvalue 1\n -e \nvariable name 2\n=\nvalue 2\n\n# linked_containers:linked container\n#linked_containers=\n--link dind_1:docker\n\n#network_settings:all network settings options\n#network_settings=--dns [] --net host --network-alias [] --add-host \n --mac-address \n --ip \n --ip6 \n --link-local-ip []\n#runtime_constraints_on_resources: runtime constraints on resources\n#runtime_constraints_on_resources=-m, --memory \n --memory-swap \n --memory-reservation \n --kernel-memory \n ...\n# force_rmi:force deletion\n# force_rmi=\n--force\n\n# command_run:bash command(s) to run\n# command_run=\n/bin/bash -c \\\ncd /; ls -la\n\n\n\n\n\nUpdate Dockerfile with jenkins reference from \ndocker hub\n\n\ntouch build/Dockerfile\necho \nFROM jenkins:latest\n \n build/Dockerfile\n\n\n\n\nHow to use edjanger in a docker project working directory\n\n\n(\ngo up to table of content\n)\n\n\nNow you've got aliases to run all your docker commands like:\n- edjangerabout\n- edjangeralias\n- edjangerattach\n- edjangerbuild\n- edjangercheck\n- edjangerclean\n- edjangercommit\n- edjangercompose\n- edjangercopy\n- edjangerdiff\n- edjangerevents\n- edjangerexec\n- edjangerhelp\n- edjangerhistory\n- edjangerimages\n- edjangerinfo\n- edjangerinit\n- edjangerinspect\n- edjangerkill\n- edjangerlogs\n- edjangerpause\n- edjangerportdesc\n- edjangerports\n- edjangerps\n- edjangerpsa\n- edjangerrename\n- edjangerrestart\n- edjangerrm\n- edjangerrmexiteds\n- edjangerrmi\n- edjangerrun\n- edjangerruni\n- edjangerstart\n- edjangerstats\n- edjangerstop\n- edjangertag\n- edjangertemplate\n- edjangertop\n- edjangerunalias\n- edjangerunpause\n- edjangerupdate\n- edjangerwait\n\n\n!!! All thoses aliases are available only when you've got an \nedjanger.properties\n file in your project folder ([docker working project]) '''\n\n\nFor each commands, see edjangerhelp 'command' for list of parameters read in edjanger.properties and arguments.\n\n\n#alias edjangerabout\n\n\nDescription : about script for edjanger.\n\n\n#alias edjangeralias\n\n\nDescription : print edjanger aliases.\n\n\n#alias edjangerbuild\n\n\nDescription : run command \"docker build\" with parameters readed from local edjanger.properties.\n\n\n#alias edjangercheck\n\n\nDescription : check missing parameters in edjanger.properties.\nRemark : even when parameters are missing in edjanger.properties, they are initialized empty.\n\n\n#alias edjangerclean\n\n\nDescription : clean all images with none attribute (run docker rmi with \"none\" filter).\n\n\n#alias edjangercopy\n\n\nDescription : run command \"docker copy\" with parameters readed from local edjanger.properties.\n\n\n#alias edjangercompose\n\n\nDescription : generate docker compose yaml from all local edjanger.poperties.\n\n\n#alias edjangerexec\n\n\nDescription : run command \"docker exec\" with parameters readed from local edjanger.properties.\n\n\n#alias edjangerhelp\n\n\nDescription : help script for edjanger command.\n\n\n#alias edjangerimages\n\n\nDescription : run command \"docker images\" with parameters readed from local edjanger.properties.\n\n\n#alias edjangerinit\n\n\nDescription : create a edjanger.properties file\n\n\n#alias edjangerinspect\n\n\nDescription : run command \"docker inspect\" with parameters readed from local edjanger.properties\n\n\n#alias edjangerlogs\n\n\nDescription : run command \"docker logs\" with parameters readed from local edjanger.properties\n\n\n#alias edjangerportdesc\n\n\nDescription : run command \"docker ports\" on all running container\n\n\n#alias edjangerports\n\n\nDescription : description of port.\n\n\n#alias edjangerps\n\n\nDescription : run command \"docker ps\" with parameters readed from local edjanger.properties.\n\n\n#alias edjangerpsa\n\n\nDescription : run command \"docker ps -a\" with parameters readed from local edjanger.properties.\n\n\n#alias edjangerrename\n\n\nDescription : run command \"docker rename\" with parameters readed from local edjanger.properties.\n\n\n#alias edjangerrestart\n\n\nDescription : run command \"docker restart\" with parameters readed from local edjanger.properties.\n\n\n#alias edjangerm\n\n\nDescription : run command \"docker rm\" with parameters readed from local edjanger.properties.\n\n\n#alias edjangermexiteds\n\n\nDescription : run docker rm with list of container with exited status.\n\n\n#alias edjangermi\n\n\nDescription : run command \"docker rmi\" with parameters readed from local edjanger.properties.\n\n\n#alias edjangerun\n\n\nDescription : run command \"docker run -id\" daemon mode, with parameters readed from local edjanger.properties.\n\n\n#alias edjangeruni\n\n\nDescription : run command \"docker run -it\" interactive mode, with parameters readed from local edjanger.properties.\n\n\n#alias edockestart\n\n\nDescription : run command \"docker start\" with parameters readed from local edjanger.properties.\n\n\n#alias edockestop\n\n\nDescription : run command \"docker stop\" with parameters readed from local edjanger.properties.\n\n\n#alias edjangertag\n\n\nDescription : run command \"docker tag\" with parameters readed from local edjanger.properties.\n\n\n#alias edjangertemplate\n\n\nDescription : create edjanger.properties from edjanger.template and properties files containing variables definition.\n\n\n#alias edjangertop\n\n\nDescription : run command \"docker top\" with parameters readed from local edjanger.properties.\n\n\n#alias edjangerunalias\n\n\nDescription : help script for edjanger command.\n\n\nCreate edjanger path project aliases\n\n\n(\ngo up to table of content\n)\n\n\nCreate those two aliases and give the correct path for your project:\n\n\nalias cdedjanger='cd [edjanger path]'\nalias cd[basename for your docker working project]='cd [your docker working project]'\n\n\n\n\nOr create all possible aliases for subfolders in a folder:\n\n\nsource /usr/local/edjanger/_common.sh\nsource $(buildPathAliases \n/opt/docker/\n)\n\n\n\n\nCheck missing parameters in edjanger.properties\n\n\n(\ngo up to table of content\n)\n\n\nedjangercheck\nCheck edjanger.properties...\n  - check \ndocker_command\n\n  - check \nimage_name\n\n  - check \nbuild_path\n\n  - check \nbuild_args\n\n    WARNING: parameter is missing !!!\n  - check \nbuild_forcerm\n\n    WARNING: parameter is missing !!!\n  - check \nbuild_rm\n\n    WARNING: parameter is missing !!!\n  - check \nbuild_nocache\n\n    WARNING: parameter is missing !!!\n  - check \nbuild_file\n\n    WARNING: parameter is missing !!!\n  - check \ncontainer_name\n\n  - check \nexposed_ports\n\n  - check \nshared_volumes\n\n    WARNING: parameter is missing !!!\n  - check \nvolumes_from\n\n    WARNING: parameter is missing !!!\n  - check \nenvironment_variables\n\n    WARNING: parameter is missing !!!\n  - check \nlinked_containers\n\n    WARNING: parameter is missing !!!\n  - check \nforce_rmi\n\n    WARNING: parameter is missing !!!\n  - check \ncommand_run\n\n    WARNING: parameter is missing !!!\n  =\n STATUS of configuration is: some parameters are undefined\n\n\n\n\nCall help commands\n\n\n(\ngo up to table of content\n)\n\n\nMain help commands\n\n\nedjangerhelp\n\n\n\n\nHelp for help\n\n\nedjangerhelp help\n\n\n\n\nHelp for commands, example for edjangerbuild\n\n\nedjangerhelp build\n\n\n\n\nHelp for parameters in edjanger.properties used by commands\n\n\nedjangerhelp config\n\n\n\n\nCreate an docker-compose.yaml file from edjanger structure\n\n\n(\ngo up to table of content\n)\nFrom an existing edjanger root path project structure, call edcokercompose.\nScript will parse all edjanger.properties in subfolders and create docker-compose.yaml at upper path.\n\n\nedjangercompose\nvi docker-compose.yaml\n\n\n\n\nUse templates files to configure edjanger.properties\n\n\n(\ngo up to table of content\n)\n\n\n! Prerequisities : install gettext (for envsubst)\n\n\n\n\n\n\nDownload and try example from https://github.com/pamtrak06/edjanger/tree/master/scripts/templates/templating, run:\n\n\n\n\n\n\nDeploy 2 apache web sever (web1 and web2) with specific ports and shared volumes for a \"production\" environement.\n    \nbash\n    ./deploy_run.sh production 5\n\n\n\n\n\n\nDeploy 2 apache web server (web1 and web2) with specific ports and shared volumes for an \"integration\" environement.\n    \nbash\n    ./deploy_run.sh integration 5\n\n\n\n\n\n\nInstructions\nFrom an existing edjanger root path project structure, do following\n\n\n\n\nrename all edjanger.properties to edjanger.template\n\n\ndefine variable for element to be replaced with variable value from configuration file\n\n\ncreate configuration files (\n.properties) containing SHELL-FORMAT variable\n\n\nin each folder containing edjanger.properties (each configuration file must hase same name e.g.: production.properties)\nor\n\n\nonly in root folder (e.g.: production.properties)\n\n\n\n\n\n\ncall edjangertemplate with name of configuration file\n\nbash\nedjangertemplate \nname\n.properties\n\n\n\n\nExample of edjangertemplate invocation\n\nbash\nedjangertemplate production.properties\n\n\nExample of production.properties content\n```bash\n\n\n!/bin/bash\n\n\nexport HTTPD_PORT_80=80\nexport HTTPD_PORT_443=443\n```\n\n\nExample of edjanger.template content\n```bash\n\n\nexposed_ports:exposed port\n\n\nexposed_ports=\"-p ${HTTPD_PORT_80}:80 -p ${HTTPD_PORT_443}:443\"\n```\n\n\nScript will find all edjanger.template and replace variables from root or folder(s) configuration(s) file(s) to produce edjanger.properties files.\n\n\nExample of edjanger.properties produced\n```bash\n\n\nexposed_ports:exposed port\n\n\nexposed_ports=\"-p 80:80 -p 443:443\"\n\n\n\n\n\n\n\n## Configure automatic container restart at boot\n([go up to table of content](#table-of-content))\n\nTo configure automatic restart of container at boot, configure edjanger.properties files :\n- activate cron_start=true to start existing container at boot\n- activate cron_build=true to build and start a new container at boot\n\nConfigure crontab with following parameters\n```bash\ncrontab -e\n@reboot {edjangerpath}/cron_build_start.sh {edjanger properties path}\n@reboot {edjangerpath}/cron_start_only.sh {edjanger properties path}\n\n\n\n\nExample:\n\n\ncrontab -e\n@reboot /opt/edjanger/scripts/cron_build_start.sh /root/workspace/docker\n@reboot /opt/edjanger/scripts/cron_start_only.sh /root/workspace/docker\n\n\n\n\nWork in progress\n\n\n(\ngo up to table of content\n)\n\n\nPlease contribute !\n\n\n\n\ndaemon               =\n TO BE Implemented\n\n\nattach               =\n OK\n\n\nbuild                =\n OK\n\n\nclean                =\n OK\n\n\ncommit               =\n OK\n\n\ncp                   =\n OK\n\n\ncreate               =\n TO BE Implemented\n\n\ndiff                 =\n OK\n\n\nevents               =\n OK\n\n\nexec                 =\n OK\n\n\nexport               =\n TO BE Implemented\n\n\nhelp                 =\n OK\n\n\nhistory              =\n OK\n\n\nimages               =\n OK\n\n\nimport               =\n TO BE Implemented\n\n\ninfo                 =\n OK\n\n\ninit                 =\n OK\n\n\ninspect              =\n OK\n\n\nkill                 =\n OK\n\n\nload                 =\n TO BE Implemented\n\n\nlogin                =\n TO BE Implemented\n\n\nlogout               =\n TO BE Implemented\n\n\nlogs                 =\n OK\n\n\nnetwork connect      =\n TO BE Implemented\n\n\nnetwork create       =\n TO BE Implemented\n\n\nnetwork disconnect   =\n TO BE Implemented\n\n\nnetwork inspect      =\n TO BE Implemented\n\n\nnetwork ls           =\n TO BE Implemented\n\n\nnetwork rm           =\n TO BE Implemented\n\n\npause                =\n TO BE Implemented\n\n\nport                 =\n OK\n\n\nps                   =\n OK\n\n\npull                 =\n TO BE Implemented\n\n\npush                 =\n TO BE Implemented\n\n\nrename               =\n OK\n\n\nrestart              =\n OK\n\n\nrm                   =\n OK\n\n\nrmi                  =\n OK\n\n\nrun                  =\n OK\n\n\nsave                 =\n TO BE Implemented\n\n\nsearch               =\n TO BE Implemented ?\n\n\nstart                =\n OK\n\n\nstats                =\n OK\n\n\nstop                 =\n OK\n\n\ntag                  =\n OK\n\n\ntop                  =\n OK\n\n\nunpause              =\n OK\n\n\nupdate               =\n OK\n\n\nversion              =\n TO BE Implemented ?\n\n\nvolume create        =\n TO BE Implemented\n\n\nvolume inspect       =\n TO BE Implemented\n\n\nvolume ls            =\n TO BE Implemented\n\n\nvolume rm            =\n TO BE Implemented\n\n\nwait                 =\n OK\n\n\n\n\nTests\n\n\n(\ngo up to table of content\n)\n\n\nTests use following\n- \ntravis\n\n- \nbats\n\n\nLicense\n\n\n(\ngo up to table of content\n)\n\n\nedjanger is under  \"MIT License (MIT)\" see \nLICENSE file\n.", 
            "title": "Home"
        }, 
        {
            "location": "/#table-of-content", 
            "text": "Presentation  How to install edjanger  How to uninstall edjanger  How to initialize an edjanger project  How to use edjanger in a docker project working directory  Create edjanger path project aliases  Check missing parameters in edjanger.properties  Call help commands  Create an docker-compose.yaml file from edjanger structure  Use templates files to configure edjanger.properties  Configure automatic container restart at boot  Work in progress  Tests  License", 
            "title": "Table of content"
        }, 
        {
            "location": "/#presentation", 
            "text": "( go up to table of content )  Scripts for shortest and easyest docker commands in a docker working folder (Dockerfile)  Tired about repeating docker commands with long parameters ?  Try edjanger ! Example :  Configure edjanger.properties with docker parameters once and run edjanger alias command.   Example 1: docker build   edjangerbuild  instead of:  docker build -t  devops/jenkins        build   Example 2: docker run   edjangerrun  instead of:  docker run -dt --name jenkins_1    -p 8080:8080 -p 50000:50000  -v /root/workspace/docker/devops/continuous_integration/jenkins/volumes/jenkins_home:/var/jenkins_home  --link dind_1:docker devops/jenkins   Example 3: docker stop   edjangerstop  instead of:  docker stop $(docker ps -aq | grep  devops/jenkins )", 
            "title": "Presentation"
        }, 
        {
            "location": "/#how-to-install-edjanger", 
            "text": "( go up to table of content )", 
            "title": "How to install edjanger"
        }, 
        {
            "location": "/#prerequisities", 
            "text": "install bc command  install gettext (for envsubst)\n    osx:\n      brew install gettext\n      brew link --force gettext\n      echo \"PATH=/usr/local/Cellar/gettext/0.19.8.1/bin/envsubst:$PATH\"   ~/.bashrc\n      source ~/.bashrc  optionnal: install tree command (from binaries or from sources http://mama.indstate.edu/users/ice/tree/)", 
            "title": "Prerequisities"
        }, 
        {
            "location": "/#os-compliant", 
            "text": "os x El Capitan 10.11.6  ubuntu   14.04", 
            "title": "OS compliant"
        }, 
        {
            "location": "/#installation", 
            "text": "git clone https://github.com/pamtrak06/edjanger.git /usr/local/bin\ncd edjanger; chmod 755 scripts/*.sh; chmod 755 edjangerinstall.sh  Run edjanger installation  ./edjangerinstall.sh --alias  This will install edjanger in /usr/local/bin/edjanger\nIf installation fail to install in this directory, try to install it in another  edjanger_INSTALL_PATH= your path \ngit clone https://github.com/pamtrak06/edjanger.git $edjanger_INSTALL_PATH\ncd edjanger; chmod 755 scripts/*.sh; chmod 755 edjangerinstall.sh  Execute the generated alias file:  . /usr/local/bin/edjanger/edjanger.alias  All is done !!! Run this command to see your edjanger aliases  alias|grep edjanger", 
            "title": "Installation"
        }, 
        {
            "location": "/#configuration", 
            "text": "bash  Bash as login shell will load /etc/profile, ~/.bash_profile, ~/.bash_login, ~/.profile in the order\nBash as non-login interactive shell will load ~/.bashrc\nBash as non-login non-interactive shell will load the configuration specified in environment variable $BASH_ENV  Add lines at the bottom of one of the following files:    echo  source {edjanger path}/edjanger.alias    /etc/profile  or  echo  source {edjanger path}/edjanger.alias    ~/.bash_profile  or  echo  source {edjanger path}/edjanger.alias    ~/.bash_login  or  echo  source {edjanger path}/edjanger.alias    ~/.profile  or  echo  source {edjanger path}/edjanger.alias    ~/.bashrc  or  echo  source {edjanger path}/edjanger.alias    ~/.bash_aliases  zsh  Add lines at the bottom of the file ~/.zshrc  echo  source {edjanger path}/edjanger.alias    ~/.zshrc  ksh  Add lines at the bottom of the file ~/.profile    echo  source {edjanger path}/edjanger.alias    ~/.profile  bourne  Add lines at the bottom of the file ~/.profile    echo  source {edjanger path}/edjanger.alias    ~/.profile  csh or tcsh  Add lines at the bottom of the file ~/.login  echo  source {edjanger path}/edjanger.alias    ~/.login", 
            "title": "Configuration"
        }, 
        {
            "location": "/#how-to-uninstall-edjanger", 
            "text": "( go up to table of content )  Remove edjanger aliases by executing:  source edjanger.unalias  Remove references to source command in ~/.bash_aliases  vi ~/.bash_aliases  Remove edjanger files  rm -rf {edjanger path}/", 
            "title": "How to uninstall edjanger"
        }, 
        {
            "location": "/#how-to-initialize-an-edjanger-project", 
            "text": "( go up to table of content )  Create an uninitialized edjanger.properties file in your working docker folder:  edjangerinit  Equivalent to   Initialize edjanger configuration file: edjanger.properties ...\ncp [edjanger path]/templates/edjanger_template.properties [your docker working project]/edjanger.properties  Initialize edjanger build folder for Dockerfile: /build ...\nmkdir [your docker working project]/build  Initialize Dockerfile: build/Dockerfile ...\ntouch [your docker working project]/build/Dockerfile  Configure your  edjanger.properties  with correct parameters.\nBy example, you could create a Dockerfile with this path:  vi [your docker working project]/build/Dockerfile  Example of a minimal edjanger configuration:  mkdir -p jenkins\ncd jenkins; edjangerinit\nvi edjanger.properties  #  ----------------------------------------------------\n#  The MIT License (MIT)\n#\n#  Copyright (c) 2016 copyright pamtrak06@gmail.com\n#  ----------------------------------------------------\n#  CONFIGURATION    : edjanger_template.properties\n#  DESCRIPTION      : project configuration file for edjanger\n#  CREATOR          : pamtrak06@gmail.com\n#  --------------------------------\n#  VERSION          : 1.0\n#  DATE             : 2016-03-02\n#  COMMENT          : creation\n#  --------------------------------\n#  USAGE            : read by edjanger scripts\n#  ----------------------------------------------------\n#cron_build: flag to start container at boot\n#cron_build=true\n#cron_start: flag to start container at boot\ncron_start=true\n# docker_command:show docker command when edjanger is used\ndocker_command=true\n# image_name:image name\nimage_name= devops/jenkins \n# build_path:path where is found Dockerfile\nbuild_path=build\n# build_args:build arguments\n# build_args= --build-arg VAR1='value1' --build-arg VAR2='value2' \n# build_forcerm:always remove intermediate containers\n# build_forcerm= --force-rm \n# build_rm: Remove intermediate containers after a successful build\n# build_rm= --rm=true \n# build_nocache:do not use cache when building the image\n# build_nocache= --no-cache \n# build_file:name of the Dockerfile (Default is 'PATH/Dockerfile')\n# build_file= --file Dockerfile \n# container_name:container\ncontainer_name= jenkins \n# exposed_ports:exposed port\nexposed_ports= -p 8080:8080 -p 50000:50000 \n# shared_volumes:shared volumes\nshared_volumes= -v $PWD/volumes/jenkins_home:/var/jenkins_home \n# volumes_from:expose volumes from another container into current container\n# volumes_from= --volumes-from  container name with exposed volumes \n# environment_variables:environnment variables\n# environment_variables= -e  variable name 1 = value 1  -e  variable name 2 = value 2 \n# linked_containers:linked container\n#linked_containers= --link dind_1:docker \n#network_settings:all network settings options\n#network_settings=--dns [] --net host --network-alias [] --add-host   --mac-address   --ip   --ip6   --link-local-ip []\n#runtime_constraints_on_resources: runtime constraints on resources\n#runtime_constraints_on_resources=-m, --memory   --memory-swap   --memory-reservation   --kernel-memory   ...\n# force_rmi:force deletion\n# force_rmi= --force \n# command_run:bash command(s) to run\n# command_run= /bin/bash -c \\ cd /; ls -la   Update Dockerfile with jenkins reference from  docker hub  touch build/Dockerfile\necho  FROM jenkins:latest    build/Dockerfile", 
            "title": "How to initialize an edjanger project"
        }, 
        {
            "location": "/#how-to-use-edjanger-in-a-docker-project-working-directory", 
            "text": "( go up to table of content )  Now you've got aliases to run all your docker commands like:\n- edjangerabout\n- edjangeralias\n- edjangerattach\n- edjangerbuild\n- edjangercheck\n- edjangerclean\n- edjangercommit\n- edjangercompose\n- edjangercopy\n- edjangerdiff\n- edjangerevents\n- edjangerexec\n- edjangerhelp\n- edjangerhistory\n- edjangerimages\n- edjangerinfo\n- edjangerinit\n- edjangerinspect\n- edjangerkill\n- edjangerlogs\n- edjangerpause\n- edjangerportdesc\n- edjangerports\n- edjangerps\n- edjangerpsa\n- edjangerrename\n- edjangerrestart\n- edjangerrm\n- edjangerrmexiteds\n- edjangerrmi\n- edjangerrun\n- edjangerruni\n- edjangerstart\n- edjangerstats\n- edjangerstop\n- edjangertag\n- edjangertemplate\n- edjangertop\n- edjangerunalias\n- edjangerunpause\n- edjangerupdate\n- edjangerwait  !!! All thoses aliases are available only when you've got an  edjanger.properties  file in your project folder ([docker working project]) '''  For each commands, see edjangerhelp 'command' for list of parameters read in edjanger.properties and arguments.", 
            "title": "How to use edjanger in a docker project working directory"
        }, 
        {
            "location": "/#alias-edjangerabout", 
            "text": "Description : about script for edjanger.", 
            "title": "#alias edjangerabout"
        }, 
        {
            "location": "/#alias-edjangeralias", 
            "text": "Description : print edjanger aliases.", 
            "title": "#alias edjangeralias"
        }, 
        {
            "location": "/#alias-edjangerbuild", 
            "text": "Description : run command \"docker build\" with parameters readed from local edjanger.properties.", 
            "title": "#alias edjangerbuild"
        }, 
        {
            "location": "/#alias-edjangercheck", 
            "text": "Description : check missing parameters in edjanger.properties.\nRemark : even when parameters are missing in edjanger.properties, they are initialized empty.", 
            "title": "#alias edjangercheck"
        }, 
        {
            "location": "/#alias-edjangerclean", 
            "text": "Description : clean all images with none attribute (run docker rmi with \"none\" filter).", 
            "title": "#alias edjangerclean"
        }, 
        {
            "location": "/#alias-edjangercopy", 
            "text": "Description : run command \"docker copy\" with parameters readed from local edjanger.properties.", 
            "title": "#alias edjangercopy"
        }, 
        {
            "location": "/#alias-edjangercompose", 
            "text": "Description : generate docker compose yaml from all local edjanger.poperties.", 
            "title": "#alias edjangercompose"
        }, 
        {
            "location": "/#alias-edjangerexec", 
            "text": "Description : run command \"docker exec\" with parameters readed from local edjanger.properties.", 
            "title": "#alias edjangerexec"
        }, 
        {
            "location": "/#alias-edjangerhelp", 
            "text": "Description : help script for edjanger command.", 
            "title": "#alias edjangerhelp"
        }, 
        {
            "location": "/#alias-edjangerimages", 
            "text": "Description : run command \"docker images\" with parameters readed from local edjanger.properties.", 
            "title": "#alias edjangerimages"
        }, 
        {
            "location": "/#alias-edjangerinit", 
            "text": "Description : create a edjanger.properties file", 
            "title": "#alias edjangerinit"
        }, 
        {
            "location": "/#alias-edjangerinspect", 
            "text": "Description : run command \"docker inspect\" with parameters readed from local edjanger.properties", 
            "title": "#alias edjangerinspect"
        }, 
        {
            "location": "/#alias-edjangerlogs", 
            "text": "Description : run command \"docker logs\" with parameters readed from local edjanger.properties", 
            "title": "#alias edjangerlogs"
        }, 
        {
            "location": "/#alias-edjangerportdesc", 
            "text": "Description : run command \"docker ports\" on all running container", 
            "title": "#alias edjangerportdesc"
        }, 
        {
            "location": "/#alias-edjangerports", 
            "text": "Description : description of port.", 
            "title": "#alias edjangerports"
        }, 
        {
            "location": "/#alias-edjangerps", 
            "text": "Description : run command \"docker ps\" with parameters readed from local edjanger.properties.", 
            "title": "#alias edjangerps"
        }, 
        {
            "location": "/#alias-edjangerpsa", 
            "text": "Description : run command \"docker ps -a\" with parameters readed from local edjanger.properties.", 
            "title": "#alias edjangerpsa"
        }, 
        {
            "location": "/#alias-edjangerrename", 
            "text": "Description : run command \"docker rename\" with parameters readed from local edjanger.properties.", 
            "title": "#alias edjangerrename"
        }, 
        {
            "location": "/#alias-edjangerrestart", 
            "text": "Description : run command \"docker restart\" with parameters readed from local edjanger.properties.", 
            "title": "#alias edjangerrestart"
        }, 
        {
            "location": "/#alias-edjangerm", 
            "text": "Description : run command \"docker rm\" with parameters readed from local edjanger.properties.", 
            "title": "#alias edjangerm"
        }, 
        {
            "location": "/#alias-edjangermexiteds", 
            "text": "Description : run docker rm with list of container with exited status.", 
            "title": "#alias edjangermexiteds"
        }, 
        {
            "location": "/#alias-edjangermi", 
            "text": "Description : run command \"docker rmi\" with parameters readed from local edjanger.properties.", 
            "title": "#alias edjangermi"
        }, 
        {
            "location": "/#alias-edjangerun", 
            "text": "Description : run command \"docker run -id\" daemon mode, with parameters readed from local edjanger.properties.", 
            "title": "#alias edjangerun"
        }, 
        {
            "location": "/#alias-edjangeruni", 
            "text": "Description : run command \"docker run -it\" interactive mode, with parameters readed from local edjanger.properties.", 
            "title": "#alias edjangeruni"
        }, 
        {
            "location": "/#alias-edockestart", 
            "text": "Description : run command \"docker start\" with parameters readed from local edjanger.properties.", 
            "title": "#alias edockestart"
        }, 
        {
            "location": "/#alias-edockestop", 
            "text": "Description : run command \"docker stop\" with parameters readed from local edjanger.properties.", 
            "title": "#alias edockestop"
        }, 
        {
            "location": "/#alias-edjangertag", 
            "text": "Description : run command \"docker tag\" with parameters readed from local edjanger.properties.", 
            "title": "#alias edjangertag"
        }, 
        {
            "location": "/#alias-edjangertemplate", 
            "text": "Description : create edjanger.properties from edjanger.template and properties files containing variables definition.", 
            "title": "#alias edjangertemplate"
        }, 
        {
            "location": "/#alias-edjangertop", 
            "text": "Description : run command \"docker top\" with parameters readed from local edjanger.properties.", 
            "title": "#alias edjangertop"
        }, 
        {
            "location": "/#alias-edjangerunalias", 
            "text": "Description : help script for edjanger command.", 
            "title": "#alias edjangerunalias"
        }, 
        {
            "location": "/#create-edjanger-path-project-aliases", 
            "text": "( go up to table of content )  Create those two aliases and give the correct path for your project:  alias cdedjanger='cd [edjanger path]'\nalias cd[basename for your docker working project]='cd [your docker working project]'  Or create all possible aliases for subfolders in a folder:  source /usr/local/edjanger/_common.sh\nsource $(buildPathAliases  /opt/docker/ )", 
            "title": "Create edjanger path project aliases"
        }, 
        {
            "location": "/#check-missing-parameters-in-edjangerproperties", 
            "text": "( go up to table of content )  edjangercheck\nCheck edjanger.properties...\n  - check  docker_command \n  - check  image_name \n  - check  build_path \n  - check  build_args \n    WARNING: parameter is missing !!!\n  - check  build_forcerm \n    WARNING: parameter is missing !!!\n  - check  build_rm \n    WARNING: parameter is missing !!!\n  - check  build_nocache \n    WARNING: parameter is missing !!!\n  - check  build_file \n    WARNING: parameter is missing !!!\n  - check  container_name \n  - check  exposed_ports \n  - check  shared_volumes \n    WARNING: parameter is missing !!!\n  - check  volumes_from \n    WARNING: parameter is missing !!!\n  - check  environment_variables \n    WARNING: parameter is missing !!!\n  - check  linked_containers \n    WARNING: parameter is missing !!!\n  - check  force_rmi \n    WARNING: parameter is missing !!!\n  - check  command_run \n    WARNING: parameter is missing !!!\n  =  STATUS of configuration is: some parameters are undefined", 
            "title": "Check missing parameters in edjanger.properties"
        }, 
        {
            "location": "/#call-help-commands", 
            "text": "( go up to table of content )  Main help commands  edjangerhelp  Help for help  edjangerhelp help  Help for commands, example for edjangerbuild  edjangerhelp build  Help for parameters in edjanger.properties used by commands  edjangerhelp config", 
            "title": "Call help commands"
        }, 
        {
            "location": "/#create-an-docker-composeyaml-file-from-edjanger-structure", 
            "text": "( go up to table of content )\nFrom an existing edjanger root path project structure, call edcokercompose.\nScript will parse all edjanger.properties in subfolders and create docker-compose.yaml at upper path.  edjangercompose\nvi docker-compose.yaml", 
            "title": "Create an docker-compose.yaml file from edjanger structure"
        }, 
        {
            "location": "/#use-templates-files-to-configure-edjangerproperties", 
            "text": "( go up to table of content )  ! Prerequisities : install gettext (for envsubst)    Download and try example from https://github.com/pamtrak06/edjanger/tree/master/scripts/templates/templating, run:    Deploy 2 apache web sever (web1 and web2) with specific ports and shared volumes for a \"production\" environement.\n     bash\n    ./deploy_run.sh production 5    Deploy 2 apache web server (web1 and web2) with specific ports and shared volumes for an \"integration\" environement.\n     bash\n    ./deploy_run.sh integration 5    Instructions\nFrom an existing edjanger root path project structure, do following   rename all edjanger.properties to edjanger.template  define variable for element to be replaced with variable value from configuration file  create configuration files ( .properties) containing SHELL-FORMAT variable  in each folder containing edjanger.properties (each configuration file must hase same name e.g.: production.properties)\nor  only in root folder (e.g.: production.properties)    call edjangertemplate with name of configuration file bash\nedjangertemplate  name .properties   Example of edjangertemplate invocation bash\nedjangertemplate production.properties  Example of production.properties content\n```bash", 
            "title": "Use templates files to configure edjanger.properties"
        }, 
        {
            "location": "/#binbash", 
            "text": "export HTTPD_PORT_80=80\nexport HTTPD_PORT_443=443\n```  Example of edjanger.template content\n```bash", 
            "title": "!/bin/bash"
        }, 
        {
            "location": "/#exposed_portsexposed-port", 
            "text": "exposed_ports=\"-p ${HTTPD_PORT_80}:80 -p ${HTTPD_PORT_443}:443\"\n```  Script will find all edjanger.template and replace variables from root or folder(s) configuration(s) file(s) to produce edjanger.properties files.  Example of edjanger.properties produced\n```bash", 
            "title": "exposed_ports:exposed port"
        }, 
        {
            "location": "/#exposed_portsexposed-port_1", 
            "text": "exposed_ports=\"-p 80:80 -p 443:443\"    \n## Configure automatic container restart at boot\n([go up to table of content](#table-of-content))\n\nTo configure automatic restart of container at boot, configure edjanger.properties files :\n- activate cron_start=true to start existing container at boot\n- activate cron_build=true to build and start a new container at boot\n\nConfigure crontab with following parameters\n```bash\ncrontab -e\n@reboot {edjangerpath}/cron_build_start.sh {edjanger properties path}\n@reboot {edjangerpath}/cron_start_only.sh {edjanger properties path}  Example:  crontab -e\n@reboot /opt/edjanger/scripts/cron_build_start.sh /root/workspace/docker\n@reboot /opt/edjanger/scripts/cron_start_only.sh /root/workspace/docker", 
            "title": "exposed_ports:exposed port"
        }, 
        {
            "location": "/#work-in-progress", 
            "text": "( go up to table of content )  Please contribute !   daemon               =  TO BE Implemented  attach               =  OK  build                =  OK  clean                =  OK  commit               =  OK  cp                   =  OK  create               =  TO BE Implemented  diff                 =  OK  events               =  OK  exec                 =  OK  export               =  TO BE Implemented  help                 =  OK  history              =  OK  images               =  OK  import               =  TO BE Implemented  info                 =  OK  init                 =  OK  inspect              =  OK  kill                 =  OK  load                 =  TO BE Implemented  login                =  TO BE Implemented  logout               =  TO BE Implemented  logs                 =  OK  network connect      =  TO BE Implemented  network create       =  TO BE Implemented  network disconnect   =  TO BE Implemented  network inspect      =  TO BE Implemented  network ls           =  TO BE Implemented  network rm           =  TO BE Implemented  pause                =  TO BE Implemented  port                 =  OK  ps                   =  OK  pull                 =  TO BE Implemented  push                 =  TO BE Implemented  rename               =  OK  restart              =  OK  rm                   =  OK  rmi                  =  OK  run                  =  OK  save                 =  TO BE Implemented  search               =  TO BE Implemented ?  start                =  OK  stats                =  OK  stop                 =  OK  tag                  =  OK  top                  =  OK  unpause              =  OK  update               =  OK  version              =  TO BE Implemented ?  volume create        =  TO BE Implemented  volume inspect       =  TO BE Implemented  volume ls            =  TO BE Implemented  volume rm            =  TO BE Implemented  wait                 =  OK", 
            "title": "Work in progress"
        }, 
        {
            "location": "/#tests", 
            "text": "( go up to table of content )  Tests use following\n-  travis \n-  bats", 
            "title": "Tests"
        }, 
        {
            "location": "/#license", 
            "text": "( go up to table of content )  edjanger is under  \"MIT License (MIT)\" see  LICENSE file .", 
            "title": "License"
        }
    ]
}