{
    "docs": [
        {
            "location": "/", 
            "text": "Easy, compact, shortest Docker commands : edjanger\n\n\n\n\nTired about repeating docker commands with long parameters ?\n\n\nTrying to find magic one from history. Putting commands in some exotical scripts ?\n\n\nTry edjanger !\n\n\n\n\n\n\nInstall\n\n\nPrerequisities for installation\n\n\n\n\ngit\n\n\nzip\n\n\n\n\nPrerequisities for runtime\n\n\n\n\nbc\n\n\ngettext (for envsubst)\n\n\n\n\n\n\n\nCompatibility\n\n\n\n\nos x El Capitan 10.11.6\n\n\nubuntu \n 14.04\n\n\n\n\nInstallation\n\n\ngit clone https://github.com/pamtrak06/edjanger.git /usr/local/bin\ncd edjanger; chmod 755 scripts/*.sh; chmod 755 edjangerinstall.sh\n\n\n\n\nRun edjanger installation\n\n\n./edjangerinstall.sh --alias\n\n\n\n\nThis will install edjanger in /usr/local/bin/edjanger\nIf installation fail to install in this directory, try to install it in another, see \nLinux Filesystem Hierarchy Standard\n for potential paths.\n\n\nEDJANGER_INSTALL_PATH=\nyour path\n\ngit clone https://github.com/pamtrak06/edjanger.git $EDJANGER_INSTALL_PATH\ncd edjanger; chmod 755 scripts/*.sh; chmod 755 edjangerinstall.sh\n\n\n\n\nExecute the generated alias file:\n\n\n. /usr/local/bin/edjanger/edjanger.alias\n\n\n\n\nAll is done !!! Run this command to see your edjanger aliases\n\n\nalias|grep edjanger\n\n\n\n\nConfiguration\n\n\n~bash~\n\n\nBash as login shell will load /etc/profile, ~/.bash_profile, ~/.bash_login, ~/.profile in the order\nBash as non-login interactive shell will load ~/.bashrc\nBash as non-login non-interactive shell will load the configuration specified in environment variable $BASH_ENV\n\n\nAdd lines at the bottom of one of the following files:  \n\n\necho \nsource {edjanger path}/edjanger.alias\n \n /etc/profile\n\n\n\n\nor\n\n\necho \nsource {edjanger path}/edjanger.alias\n \n ~/.bash_profile\n\n\n\n\nor\n\n\necho \nsource {edjanger path}/edjanger.alias\n \n ~/.bash_login\n\n\n\n\nor\n\n\necho \nsource {edjanger path}/edjanger.alias\n \n ~/.profile\n\n\n\n\nor\n\n\necho \nsource {edjanger path}/edjanger.alias\n \n ~/.bashrc\n\n\n\n\nor\n\n\necho \nsource {edjanger path}/edjanger.alias\n \n ~/.bash_aliases\n\n\n\n\nzsh\n\n\nAdd lines at the bottom of the file ~/.zshrc\n\n\necho \nsource {edjanger path}/edjanger.alias\n \n ~/.zshrc\n\n\n\n\nksh\n\n\nAdd lines at the bottom of the file ~/.profile  \n\n\necho \nsource {edjanger path}/edjanger.alias\n \n ~/.profile\n\n\n\n\nbourne\n\n\nAdd lines at the bottom of the file ~/.profile  \n\n\necho \nsource {edjanger path}/edjanger.alias\n \n ~/.profile\n\n\n\n\ncsh or tcsh\n\n\nAdd lines at the bottom of the file ~/.login\n\n\necho \nsource {edjanger path}/edjanger.alias\n \n ~/.login\n\n\n\n\nUninstall\n\n\nRemove edjanger aliases by executing:\n\n\nsource edjanger.unalias\n\n\n\n\nRemove references to source command in ~/.bash_aliases\n\n\nvi ~/.bash_aliases\n\n\n\n\nRemove edjanger files\n\n\nrm -rf {edjanger path}/\n\n\n\n\nGetting started\n\n\nCreate an uninitialized edjanger.properties file in your working docker folder:\n\n\nedjangerinit\n\n\n\n\nEquivalent to\n\n\n Initialize edjanger configuration file: edjanger.properties ...\ncp [edjanger path]/templates/edjanger_template.properties [your docker working project]/edjanger.properties\n\n Initialize edjanger build folder for Dockerfile: /build ...\nmkdir [your docker working project]/build\n\n Initialize Dockerfile: build/Dockerfile ...\ntouch [your docker working project]/build/Dockerfile\n\n\n\n\nConfigure your \nedjanger.properties\n with correct parameters.\nBy example, you could create a Dockerfile with this path:\n\n\nvi [your docker working project]/build/Dockerfile\n\n\n\n\nExample of a minimal edjanger configuration:\n\n\nmkdir -p jenkins\ncd jenkins; edjangerinit\nvi edjanger.properties\n\n\n\n\n#  ----------------------------------------------------\n#  The MIT License (MIT)\n#\n#  Copyright (c) 2016 copyright pamtrak06@gmail.com\n#  ----------------------------------------------------\n#  CONFIGURATION    : edjanger_template.properties\n#  DESCRIPTION      : project configuration file for edjanger\n#  CREATOR          : pamtrak06@gmail.com\n#  --------------------------------\n#  VERSION          : 1.0\n#  DATE             : 2016-03-02\n#  COMMENT          : creation\n#  --------------------------------\n#  USAGE            : read by edjanger scripts\n#  ----------------------------------------------------\n#cron_build: flag to start container at boot\n#cron_build=true\n#cron_start: flag to start container at boot\ncron_start=true\n# docker_command:show docker command when edjanger is used\ndocker_command=true\n# image_name:image name\nimage_name=\ndevops/jenkins\n\n# build_path:path where is found Dockerfile\nbuild_path=build\n# build_args:build arguments\n# build_args=\n--build-arg VAR1='value1' --build-arg VAR2='value2'\n\n# build_forcerm:always remove intermediate containers\n# build_forcerm=\n--force-rm\n\n# build_rm: Remove intermediate containers after a successful build\n# build_rm=\n--rm=true\n\n# build_nocache:do not use cache when building the image\n# build_nocache=\n--no-cache\n\n# build_file:name of the Dockerfile (Default is 'PATH/Dockerfile')\n# build_file=\n--file Dockerfile\n\n# container_name:container\ncontainer_name=\njenkins\n\n# exposed_ports:exposed port\nexposed_ports=\n-p 8080:8080 -p 50000:50000\n\n# shared_volumes:shared volumes\nshared_volumes=\n-v $PWD/volumes/jenkins_home:/var/jenkins_home\n\n# volumes_from:expose volumes from another container into current container\n# volumes_from=\n--volumes-from \ncontainer name with exposed volumes\n\n# environment_variables:environnment variables\n# environment_variables=\n-e \nvariable name 1\n=\nvalue 1\n -e \nvariable name 2\n=\nvalue 2\n\n# linked_containers:linked container\n#linked_containers=\n--link dind_1:docker\n\n#network_settings:all network settings options\n#network_settings=--dns [] --net host --network-alias [] --add-host \n --mac-address \n --ip \n --ip6 \n --link-local-ip []\n#runtime_constraints_on_resources: runtime constraints on resources\n#runtime_constraints_on_resources=-m, --memory \n --memory-swap \n --memory-reservation \n --kernel-memory \n ...\n# force_rmi:force deletion\n# force_rmi=\n--force\n\n# command_run:bash command(s) to run\n# command_run=\n/bin/bash -c \\\ncd /; ls -la\n\n\n\n\n\nUpdate Dockerfile with jenkins reference from \ndocker hub\n\n\ntouch build/Dockerfile\necho \nFROM jenkins:latest\n \n build/Dockerfile\n\n\n\n\n\n\nExample 1: docker build\n\n\n\n\nedjangerbuild\n\n\n\n\ninstead of:\n\n\ndocker build -t \ndevops/jenkins\n       build\n\n\n\n\n\n\nExample 2: docker run\n\n\n\n\nedjangerrun\n\n\n\n\ninstead of:\n\n\ndocker run -dt --name jenkins_1    -p 8080:8080 -p 50000:50000  -v /root/workspace/docker/devops/continuous_integration/jenkins/volumes/jenkins_home:/var/jenkins_home  --link dind_1:docker devops/jenkins\n\n\n\n\n\n\nExample 3: docker stop\n\n\n\n\nedjangerstop\n\n\n\n\ninstead of:\n\n\ndocker stop $(docker ps -aq | grep \ndevops/jenkins\n)\n\n\n\n\nBest practices\n\n\nUse a folder for each edjanger project.\n\n\nUse following structure :\n\n\n- [edjanger main project folder]\n    - edjanger.properties   \n edjanger project configuration\n    - [build]               \n docker build folder (contains Dockerfile and files dependencies)\n        -  Dockerfile       \n default Dockerfile\n    - volumes               \n contains all shared volumes\n\n\n\n\nUse cases : basic commands\n\n\nAll those command are compact and useful docker shortcuts !\n\n\n\n\n\n\n\n\n\n\nDescription\n\n\nIMAGE\n\n\nCONTAINER\n\n\n\n\n\n\n\n\n\n\nedjangerbuild\n\n\n\"docker build\" with parameters readed from local edjanger.properties.\n\n\nX\n\n\n\n\n\n\n\n\nedjangerclean\n\n\nclean all images with none attribute (run docker rmi with \"none\" filter).\n\n\nX\n\n\n\n\n\n\n\n\nedjangercopy\n\n\n\"docker copy\" with parameters readed from local edjanger.properties.\n\n\n\n\nX\n\n\n\n\n\n\nedjangerexec\n\n\n\"docker exec\" with parameters readed from local edjanger.properties.\n\n\n\n\nX\n\n\n\n\n\n\nedjangerimages\n\n\n\"docker exec\" with parameters readed from local edjanger.properties.\n\n\nX\n\n\n\n\n\n\n\n\nedjangerinspect\n\n\n\"docker inspect\" with parameters readed from local edjanger.properties.\n\n\n\n\nX\n\n\n\n\n\n\nedjangerlogs\n\n\n\"docker logs\" with parameters readed from local edjanger.properties.\n\n\n\n\nX\n\n\n\n\n\n\nedjangerps\n\n\n\"docker ps\" with parameters readed from local edjanger.properties.\n\n\n\n\nX\n\n\n\n\n\n\nedjangerpsa\n\n\n\"docker ps -a\" with parameters readed from local edjanger.properties.\n\n\n\n\nX\n\n\n\n\n\n\nedjangerrename\n\n\n\"docker rename\" with parameters readed from local edjanger.properties.\n\n\n\n\nX\n\n\n\n\n\n\nedjangerrestart\n\n\n\"docker restart\" with parameters readed from local edjanger.properties.\n\n\n\n\nX\n\n\n\n\n\n\nedjangerm\n\n\n\"docker rm\" with parameters readed from local edjanger.properties.\n\n\n\n\nX\n\n\n\n\n\n\nedjangermi\n\n\n\"docker rmi\" with parameters readed from local edjanger.properties.\n\n\nX\n\n\n\n\n\n\n\n\nedjangerun\n\n\n\"docker run -d\" with parameters readed from local edjanger.properties.\n\n\n\n\nX\n\n\n\n\n\n\nedjangeruni\n\n\n\"docker run -it\" with parameters readed from local edjanger.properties.\n\n\n\n\nX\n\n\n\n\n\n\nedockestart\n\n\n\"docker start\" with parameters readed from local edjanger.properties.\n\n\n\n\nX\n\n\n\n\n\n\nedockestop\n\n\n\"docker stop\" with parameters readed from local edjanger.properties.\n\n\n\n\nX\n\n\n\n\n\n\nedjangertag\n\n\n\"docker tag\" with parameters readed from local edjanger.properties.\n\n\n\n\nX\n\n\n\n\n\n\nedjangertop\n\n\n\"docker top\" with parameters readed from local edjanger.properties.\n\n\n\n\nX\n\n\n\n\n\n\n\n\nUse cases : docker\n\n\n\n\n\n\n\n\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nedjangerportdesc\n\n\n\"docker ports\" on all running container.\n\n\n\n\n\n\nedjangerports\n\n\ndescription of port.\n\n\n\n\n\n\nedjangermexiteds\n\n\ndocker rm with list of container with exited status.\n\n\n\n\n\n\n\n\nUse cases : useful\n\n\n\n\n\n\n\n\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nedjangerabout\n\n\nabout script for edjanger.\n\n\n\n\n\n\nedjangercheck\n\n\ncheck missing parameters in edjanger.properties.\n\n\n\n\n\n\nedjangeralias\n\n\nprint edjanger aliases.\n\n\n\n\n\n\nedjangerunalias\n\n\nhelp script for edjanger command.\n\n\n\n\n\n\n\n\nCheck missing parameters in edjanger.properties\n\n\nedjangercheck\nCheck edjanger.properties...\n  - check \ndocker_command\n\n  - check \nimage_name\n\n  - check \nbuild_path\n\n  - check \nbuild_args\n\n    WARNING: parameter is missing !!!\n  - check \nbuild_forcerm\n\n    WARNING: parameter is missing !!!\n  - check \nbuild_rm\n\n    WARNING: parameter is missing !!!\n  - check \nbuild_nocache\n\n    WARNING: parameter is missing !!!\n  - check \nbuild_file\n\n    WARNING: parameter is missing !!!\n  - check \ncontainer_name\n\n  - check \nexposed_ports\n\n  - check \nshared_volumes\n\n    WARNING: parameter is missing !!!\n  - check \nvolumes_from\n\n    WARNING: parameter is missing !!!\n  - check \nenvironment_variables\n\n    WARNING: parameter is missing !!!\n  - check \nlinked_containers\n\n    WARNING: parameter is missing !!!\n  - check \nforce_rmi\n\n    WARNING: parameter is missing !!!\n  - check \ncommand_run\n\n    WARNING: parameter is missing !!!\n  =\n STATUS of configuration is: some parameters are undefined\n\n\n\n\nRemark : even when parameters are missing in edjanger.properties, they are initialized empty.\n\n\nUse case: compose\n\n\nFrom an existing edjanger root path project structure, call edcokercompose.\nScript will parse all edjanger.properties in subfolders and create docker-compose.yaml at upper path.\n\n\nedjangercompose\nvi docker-compose.yaml\n\n\n\n\nUse case: template\n\n\n\n\nPrerequisities : install gettext (for envsubst)\n\n\n\n\n\n\n\n\nDownload and try example from \nhttps://github.com/pamtrak06/edjanger/tree/master/scripts/templates/templating\n, run:\n\n\n\n\n\n\nDeploy 2 apache web sever (web1 and web2) with specific ports and shared volumes for a \"production\" environement.\n    \nbash\n    ./deploy_run.sh production 5\n\n\n\n\n\n\nDeploy 2 apache web server (web1 and web2) with specific ports and shared volumes for an \"integration\" environement.\n    \nbash\n    ./deploy_run.sh integration 5\n\n\n\n\n\n\nInstructions\nFrom an existing edjanger root path project structure, do following\n\n\n\n\nrename all edjanger.properties to edjanger.template\n\n\ndefine variable for element to be replaced with variable value from configuration file\n\n\ncreate configuration files (\n.properties) containing SHELL-FORMAT variable\n\n\nin each folder containing edjanger.properties (each configuration file must hase same name e.g.: production.properties)\nor\n\n\nonly in root folder (e.g.: production.properties)\n\n\n\n\n\n\ncall edjangertemplate with name of configuration file\n\n\n\n\n\n\n\n\nedjangertemplate \nname\n.properties\n\n\n\n\nExample of edjangertemplate invocation\n\n\nedjangertemplate production.properties\n\n\n\n\nExample of production.properties content\n\n\n#!/bin/bash\nexport HTTPD_PORT_80=80\nexport HTTPD_PORT_443=443\n\n\n\n\nExample of edjanger.template content\n\n\n#exposed_ports:exposed port\nexposed_ports=\n-p ${HTTPD_PORT_80}:80 -p ${HTTPD_PORT_443}:443\n\n\n\n\n\nScript will find all edjanger.template and replace variables from root or folder(s) configuration(s) file(s) to produce edjanger.properties files.\n\n\nExample of edjanger.properties produced\n\n\n#exposed_ports:exposed port\nexposed_ports=\n-p 80:80 -p 443:443\n\n\n\n\n\nUse case : crontab\n\n\nConfigure automatic container restart at boot\n\n\nTo configure automatic restart of container at boot, configure edjanger.properties files :\n- activate cron_start=true to start existing container at boot\n- activate cron_build=true to build and start a new container at boot\n\n\nConfigure crontab with following parameters\n\n\ncrontab -e\n@reboot {edjangerpath}/cron_build_start.sh {edjanger properties path}\n@reboot {edjangerpath}/cron_start_only.sh {edjanger properties path}\n\n\n\n\nExample:\n\n\ncrontab -e\n@reboot /opt/edjanger/scripts/cron_build_start.sh /root/workspace/docker\n@reboot /opt/edjanger/scripts/cron_start_only.sh /root/workspace/docker\n\n\n\n\nhelp\n\n\nFor each commands, see edjangerhelp 'command' for list of parameters read in edjanger.properties and arguments.\n\n\nUnit tests\n\n\nTests use following\n\n\n\n\ntravis\n\n\nbats\n\n\n\n\nResult Tests are visible here\n\n\n\n\npamtrak06/edjanger from Travis\n\n\n\n\nRun tests :\n\n\ncd [edjanger path];\n./run_tests.sh\n\n\n\n\nLicense\n\n\n @Author : \nPamtrak06\n, \nGitHub sources\n\n\nedjanger is under  \"MIT License (MIT)\" see \nLICENSE file\n.", 
            "title": "Home"
        }, 
        {
            "location": "/#easy-compact-shortest-docker-commands-edjanger", 
            "text": "Tired about repeating docker commands with long parameters ?  Trying to find magic one from history. Putting commands in some exotical scripts ?  Try edjanger !", 
            "title": "Easy, compact, shortest Docker commands : edjanger"
        }, 
        {
            "location": "/#install", 
            "text": "Prerequisities for installation   git  zip   Prerequisities for runtime   bc  gettext (for envsubst)    Compatibility   os x El Capitan 10.11.6  ubuntu   14.04   Installation  git clone https://github.com/pamtrak06/edjanger.git /usr/local/bin\ncd edjanger; chmod 755 scripts/*.sh; chmod 755 edjangerinstall.sh  Run edjanger installation  ./edjangerinstall.sh --alias  This will install edjanger in /usr/local/bin/edjanger\nIf installation fail to install in this directory, try to install it in another, see  Linux Filesystem Hierarchy Standard  for potential paths.  EDJANGER_INSTALL_PATH= your path \ngit clone https://github.com/pamtrak06/edjanger.git $EDJANGER_INSTALL_PATH\ncd edjanger; chmod 755 scripts/*.sh; chmod 755 edjangerinstall.sh  Execute the generated alias file:  . /usr/local/bin/edjanger/edjanger.alias  All is done !!! Run this command to see your edjanger aliases  alias|grep edjanger  Configuration  ~bash~  Bash as login shell will load /etc/profile, ~/.bash_profile, ~/.bash_login, ~/.profile in the order\nBash as non-login interactive shell will load ~/.bashrc\nBash as non-login non-interactive shell will load the configuration specified in environment variable $BASH_ENV  Add lines at the bottom of one of the following files:    echo  source {edjanger path}/edjanger.alias    /etc/profile  or  echo  source {edjanger path}/edjanger.alias    ~/.bash_profile  or  echo  source {edjanger path}/edjanger.alias    ~/.bash_login  or  echo  source {edjanger path}/edjanger.alias    ~/.profile  or  echo  source {edjanger path}/edjanger.alias    ~/.bashrc  or  echo  source {edjanger path}/edjanger.alias    ~/.bash_aliases  zsh  Add lines at the bottom of the file ~/.zshrc  echo  source {edjanger path}/edjanger.alias    ~/.zshrc  ksh  Add lines at the bottom of the file ~/.profile    echo  source {edjanger path}/edjanger.alias    ~/.profile  bourne  Add lines at the bottom of the file ~/.profile    echo  source {edjanger path}/edjanger.alias    ~/.profile  csh or tcsh  Add lines at the bottom of the file ~/.login  echo  source {edjanger path}/edjanger.alias    ~/.login", 
            "title": "Install"
        }, 
        {
            "location": "/#uninstall", 
            "text": "Remove edjanger aliases by executing:  source edjanger.unalias  Remove references to source command in ~/.bash_aliases  vi ~/.bash_aliases  Remove edjanger files  rm -rf {edjanger path}/", 
            "title": "Uninstall"
        }, 
        {
            "location": "/#getting-started", 
            "text": "Create an uninitialized edjanger.properties file in your working docker folder:  edjangerinit  Equivalent to   Initialize edjanger configuration file: edjanger.properties ...\ncp [edjanger path]/templates/edjanger_template.properties [your docker working project]/edjanger.properties  Initialize edjanger build folder for Dockerfile: /build ...\nmkdir [your docker working project]/build  Initialize Dockerfile: build/Dockerfile ...\ntouch [your docker working project]/build/Dockerfile  Configure your  edjanger.properties  with correct parameters.\nBy example, you could create a Dockerfile with this path:  vi [your docker working project]/build/Dockerfile  Example of a minimal edjanger configuration:  mkdir -p jenkins\ncd jenkins; edjangerinit\nvi edjanger.properties  #  ----------------------------------------------------\n#  The MIT License (MIT)\n#\n#  Copyright (c) 2016 copyright pamtrak06@gmail.com\n#  ----------------------------------------------------\n#  CONFIGURATION    : edjanger_template.properties\n#  DESCRIPTION      : project configuration file for edjanger\n#  CREATOR          : pamtrak06@gmail.com\n#  --------------------------------\n#  VERSION          : 1.0\n#  DATE             : 2016-03-02\n#  COMMENT          : creation\n#  --------------------------------\n#  USAGE            : read by edjanger scripts\n#  ----------------------------------------------------\n#cron_build: flag to start container at boot\n#cron_build=true\n#cron_start: flag to start container at boot\ncron_start=true\n# docker_command:show docker command when edjanger is used\ndocker_command=true\n# image_name:image name\nimage_name= devops/jenkins \n# build_path:path where is found Dockerfile\nbuild_path=build\n# build_args:build arguments\n# build_args= --build-arg VAR1='value1' --build-arg VAR2='value2' \n# build_forcerm:always remove intermediate containers\n# build_forcerm= --force-rm \n# build_rm: Remove intermediate containers after a successful build\n# build_rm= --rm=true \n# build_nocache:do not use cache when building the image\n# build_nocache= --no-cache \n# build_file:name of the Dockerfile (Default is 'PATH/Dockerfile')\n# build_file= --file Dockerfile \n# container_name:container\ncontainer_name= jenkins \n# exposed_ports:exposed port\nexposed_ports= -p 8080:8080 -p 50000:50000 \n# shared_volumes:shared volumes\nshared_volumes= -v $PWD/volumes/jenkins_home:/var/jenkins_home \n# volumes_from:expose volumes from another container into current container\n# volumes_from= --volumes-from  container name with exposed volumes \n# environment_variables:environnment variables\n# environment_variables= -e  variable name 1 = value 1  -e  variable name 2 = value 2 \n# linked_containers:linked container\n#linked_containers= --link dind_1:docker \n#network_settings:all network settings options\n#network_settings=--dns [] --net host --network-alias [] --add-host   --mac-address   --ip   --ip6   --link-local-ip []\n#runtime_constraints_on_resources: runtime constraints on resources\n#runtime_constraints_on_resources=-m, --memory   --memory-swap   --memory-reservation   --kernel-memory   ...\n# force_rmi:force deletion\n# force_rmi= --force \n# command_run:bash command(s) to run\n# command_run= /bin/bash -c \\ cd /; ls -la   Update Dockerfile with jenkins reference from  docker hub  touch build/Dockerfile\necho  FROM jenkins:latest    build/Dockerfile   Example 1: docker build   edjangerbuild  instead of:  docker build -t  devops/jenkins        build   Example 2: docker run   edjangerrun  instead of:  docker run -dt --name jenkins_1    -p 8080:8080 -p 50000:50000  -v /root/workspace/docker/devops/continuous_integration/jenkins/volumes/jenkins_home:/var/jenkins_home  --link dind_1:docker devops/jenkins   Example 3: docker stop   edjangerstop  instead of:  docker stop $(docker ps -aq | grep  devops/jenkins )", 
            "title": "Getting started"
        }, 
        {
            "location": "/#best-practices", 
            "text": "Use a folder for each edjanger project.  Use following structure :  - [edjanger main project folder]\n    - edjanger.properties     edjanger project configuration\n    - [build]                 docker build folder (contains Dockerfile and files dependencies)\n        -  Dockerfile         default Dockerfile\n    - volumes                 contains all shared volumes", 
            "title": "Best practices"
        }, 
        {
            "location": "/#use-cases-basic-commands", 
            "text": "All those command are compact and useful docker shortcuts !      Description  IMAGE  CONTAINER      edjangerbuild  \"docker build\" with parameters readed from local edjanger.properties.  X     edjangerclean  clean all images with none attribute (run docker rmi with \"none\" filter).  X     edjangercopy  \"docker copy\" with parameters readed from local edjanger.properties.   X    edjangerexec  \"docker exec\" with parameters readed from local edjanger.properties.   X    edjangerimages  \"docker exec\" with parameters readed from local edjanger.properties.  X     edjangerinspect  \"docker inspect\" with parameters readed from local edjanger.properties.   X    edjangerlogs  \"docker logs\" with parameters readed from local edjanger.properties.   X    edjangerps  \"docker ps\" with parameters readed from local edjanger.properties.   X    edjangerpsa  \"docker ps -a\" with parameters readed from local edjanger.properties.   X    edjangerrename  \"docker rename\" with parameters readed from local edjanger.properties.   X    edjangerrestart  \"docker restart\" with parameters readed from local edjanger.properties.   X    edjangerm  \"docker rm\" with parameters readed from local edjanger.properties.   X    edjangermi  \"docker rmi\" with parameters readed from local edjanger.properties.  X     edjangerun  \"docker run -d\" with parameters readed from local edjanger.properties.   X    edjangeruni  \"docker run -it\" with parameters readed from local edjanger.properties.   X    edockestart  \"docker start\" with parameters readed from local edjanger.properties.   X    edockestop  \"docker stop\" with parameters readed from local edjanger.properties.   X    edjangertag  \"docker tag\" with parameters readed from local edjanger.properties.   X    edjangertop  \"docker top\" with parameters readed from local edjanger.properties.   X", 
            "title": "Use cases : basic commands"
        }, 
        {
            "location": "/#use-cases-docker", 
            "text": "Description      edjangerportdesc  \"docker ports\" on all running container.    edjangerports  description of port.    edjangermexiteds  docker rm with list of container with exited status.", 
            "title": "Use cases : docker"
        }, 
        {
            "location": "/#use-cases-useful", 
            "text": "Description      edjangerabout  about script for edjanger.    edjangercheck  check missing parameters in edjanger.properties.    edjangeralias  print edjanger aliases.    edjangerunalias  help script for edjanger command.     Check missing parameters in edjanger.properties  edjangercheck\nCheck edjanger.properties...\n  - check  docker_command \n  - check  image_name \n  - check  build_path \n  - check  build_args \n    WARNING: parameter is missing !!!\n  - check  build_forcerm \n    WARNING: parameter is missing !!!\n  - check  build_rm \n    WARNING: parameter is missing !!!\n  - check  build_nocache \n    WARNING: parameter is missing !!!\n  - check  build_file \n    WARNING: parameter is missing !!!\n  - check  container_name \n  - check  exposed_ports \n  - check  shared_volumes \n    WARNING: parameter is missing !!!\n  - check  volumes_from \n    WARNING: parameter is missing !!!\n  - check  environment_variables \n    WARNING: parameter is missing !!!\n  - check  linked_containers \n    WARNING: parameter is missing !!!\n  - check  force_rmi \n    WARNING: parameter is missing !!!\n  - check  command_run \n    WARNING: parameter is missing !!!\n  =  STATUS of configuration is: some parameters are undefined  Remark : even when parameters are missing in edjanger.properties, they are initialized empty.", 
            "title": "Use cases : useful"
        }, 
        {
            "location": "/#use-case-compose", 
            "text": "From an existing edjanger root path project structure, call edcokercompose.\nScript will parse all edjanger.properties in subfolders and create docker-compose.yaml at upper path.  edjangercompose\nvi docker-compose.yaml", 
            "title": "Use case: compose"
        }, 
        {
            "location": "/#use-case-template", 
            "text": "Prerequisities : install gettext (for envsubst)     Download and try example from  https://github.com/pamtrak06/edjanger/tree/master/scripts/templates/templating , run:    Deploy 2 apache web sever (web1 and web2) with specific ports and shared volumes for a \"production\" environement.\n     bash\n    ./deploy_run.sh production 5    Deploy 2 apache web server (web1 and web2) with specific ports and shared volumes for an \"integration\" environement.\n     bash\n    ./deploy_run.sh integration 5    Instructions\nFrom an existing edjanger root path project structure, do following   rename all edjanger.properties to edjanger.template  define variable for element to be replaced with variable value from configuration file  create configuration files ( .properties) containing SHELL-FORMAT variable  in each folder containing edjanger.properties (each configuration file must hase same name e.g.: production.properties)\nor  only in root folder (e.g.: production.properties)    call edjangertemplate with name of configuration file     edjangertemplate  name .properties  Example of edjangertemplate invocation  edjangertemplate production.properties  Example of production.properties content  #!/bin/bash\nexport HTTPD_PORT_80=80\nexport HTTPD_PORT_443=443  Example of edjanger.template content  #exposed_ports:exposed port\nexposed_ports= -p ${HTTPD_PORT_80}:80 -p ${HTTPD_PORT_443}:443   Script will find all edjanger.template and replace variables from root or folder(s) configuration(s) file(s) to produce edjanger.properties files.  Example of edjanger.properties produced  #exposed_ports:exposed port\nexposed_ports= -p 80:80 -p 443:443", 
            "title": "Use case: template"
        }, 
        {
            "location": "/#use-case-crontab", 
            "text": "Configure automatic container restart at boot  To configure automatic restart of container at boot, configure edjanger.properties files :\n- activate cron_start=true to start existing container at boot\n- activate cron_build=true to build and start a new container at boot  Configure crontab with following parameters  crontab -e\n@reboot {edjangerpath}/cron_build_start.sh {edjanger properties path}\n@reboot {edjangerpath}/cron_start_only.sh {edjanger properties path}  Example:  crontab -e\n@reboot /opt/edjanger/scripts/cron_build_start.sh /root/workspace/docker\n@reboot /opt/edjanger/scripts/cron_start_only.sh /root/workspace/docker", 
            "title": "Use case : crontab"
        }, 
        {
            "location": "/#help", 
            "text": "For each commands, see edjangerhelp 'command' for list of parameters read in edjanger.properties and arguments.", 
            "title": "help"
        }, 
        {
            "location": "/#unit-tests", 
            "text": "Tests use following   travis  bats   Result Tests are visible here   pamtrak06/edjanger from Travis   Run tests :  cd [edjanger path];\n./run_tests.sh", 
            "title": "Unit tests"
        }, 
        {
            "location": "/#license", 
            "text": "@Author :  Pamtrak06 ,  GitHub sources  edjanger is under  \"MIT License (MIT)\" see  LICENSE file .", 
            "title": "License"
        }
    ]
}